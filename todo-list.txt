- accounts 
    - make Custome User Model Done ✅
        - user -> onetoOne field with default user Model
        - name -> CharField
        - email -> EmailField
        - avatar -> Image
        - joined_at -> DateTime
        - slug  -> SlugField
        - reciver function Done ✅
    - views :
        -
- store
    - Product Modele Done ✅
        - category -> OneToManyRelation With Category Model
        - name -> CharField
        - user -> OneToManyRelation
        - discription -> TextField
        - price -> DecimalField
        - discount -> DecimalField
        - image -> image
        - added_at -> DateTime
        - update_at -> DateTime
        - instock -> IntegerField
        - slug -> SlugField

    - Category Model Done ✅
        name  -> CharField
        slug -> SlugField

    - views:
        - Category views
        - Product views
        - Favourites views
        - Get-user views
        - search
        - filters
    - admin file to update admin panal

-payment
    - order Model
        - product -> OneToManyRelation
        - quantity -> IntegerField
        - profile -> OneToManyRelation 
        -  shipping - > OneToManyRelation shipping Model
        - created_at -> DateTime
        - update_at -> DateTime
    - shipping Model
        - address
        - zip code 
        - country
        - first_name
        - last name
        - email
        - state
        - building number
        - phone number
        



    search: -> method GET
        - searhing with name and discription
        - return Response With product
        - i will lookup for search_trem in request.data
        - and i will filter with it to get the product
        - than i will use the Product serializer to add this product on it 
        - and check if the product search it success and get the product 
        - if success : return The reponse with serializer data and status ok if founded 
        - else : return reponse with message no product matches this{search_trem}  and status Not founded


    - order
     veiwsets on the order model 
     - generate the amount from the total or the order item prices using agragete function 

    order_item viewsets on the order item and associte the user and order  with the order i will lock up on the order uuid and assochited the order with order item and the request .user is will the user or order

    {
        {
            "user":{
                "first_name":"someone"
                "last_name":"someone"
                "avavter":"someone"
                "email":"someone#@gmail.com"
            }
            "orderItem"
        }
    }



no i expact from the frontend when he create order_item for order expact order_id and this id field is uuid and i will add it on the create method and when create order item must i will extract the order id and add it in the create you now that it's like when the user is create order ok and the order is created successfully now i will get the product    

    - new i need Cart 
        - make class that will have the all cart functiolity
        - first we need to create session for user is not have
        - and used this session to add the product_id and quatity of the product
        - and make the update and delete on this session 
        - and return the product_id and quatity in the checkout view 
        - than create order 
        - and make loop in the session to get the products id and quantity 
        - and get the product 
        - than pass the product to order_item to create new order item
        - than associted the order item with main order 
    - after make cart  i need to make checkout view 
    - checkout:
        all this in one tranction
            - get the user cart
            - create order with the user  
            - making for loop in the cart order 
            - create orderitem with cart items
            - than linked the orderItem with the order 
        mark the order as shipped when the payment is successd


 - create Comment System
     - Comment Model:
        - user
        - product
        - body 
        -created_at
        - update_at
        - slug
        - active
        